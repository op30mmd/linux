name: Build Fedora 42 Kernel from Fork (Bootable)

on:
  workflow_dispatch:
    inputs:
      fork_owner:
        description: 'Your GitHub username or organization that owns the fork'
        required: true
        default: 'op30mmd' # The default upstream kernel repository owner
      branch_name:
        description: 'The branch to build from your fork'
        required: true
        default: 'master' # The default upstream kernel branch

jobs:
  build:
    runs-on: ubuntu-latest
    container: fedora:42
    steps:
      - name: Install Build Dependencies
        run: |
          # Install all necessary tools for kernel compilation and packaging.
          dnf install -y git make gcc bison flex elfutils-devel openssl-devel rpm-build cpio hostname \
                         dwarves openssl perl rsync bc

      - name: Clone kernel source from your fork
        run: |
          git clone https://github.com/${{ github.event.inputs.fork_owner }}/linux.git
          cd linux
          git checkout ${{ github.event.inputs.branch_name }}
          echo "Successfully cloned and checked out ${{ github.event.inputs.branch_name }} from ${{ github.event.inputs.fork_owner }}/linux"

      - name: Configure Kernel for Boot
        run: |
          cd linux
          # Start with a standard, default configuration
          make defconfig
          echo "Created default kernel configuration."

          # --- Add Essential Features for a Bootable Desktop System ---

          # Enable common filesystems
          scripts/config --enable CONFIG_EXT4_FS
          scripts/config --enable CONFIG_BTRFS_FS
          scripts/config --enable CONFIG_XFS_FS

          # Enable VirtIO drivers - crucial for running in VMs (like the build environment and many user setups)
          scripts/config --enable CONFIG_VIRTIO_PCI
          scripts/config --enable CONFIG_VIRTIO_BLK
          scripts/config --enable CONFIG_VIRTIO_NET
          scripts/config --enable CONFIG_VIRTIO_CONSOLE
          scripts/config --enable CONFIG_VIRTIO_GPU
          scripts/config --enable CONFIG_DRM_VIRTIO_GPU

          # Enable Framebuffer and console support for basic video output
          scripts/config --enable CONFIG_FB_EFI
          scripts/config --enable CONFIG_FRAMEBUFFER_CONSOLE

          # --- AMDGPU Configuration ---
          # This ensures all dependencies for the AMDGPU driver are met
          echo "Enabling AMDGPU for SI cards and all its dependencies..."
          scripts/config --module CONFIG_DRM_AMD_ACP
          scripts/config --module CONFIG_DRM_AMD_DC
          scripts/config --module CONFIG_DRM_AMD_DC_FP
          scripts/config --module CONFIG_DRM_AMDGPU
          scripts/config --enable CONFIG_DRM_AMDGPU_SI # Your specific request
          scripts/config --disable CONFIG_DRM_RADEON_SI_SUPPORT # Disable the conflicting old driver

          # Apply all the changes
          make olddefconfig
          echo "Kernel configuration updated with essential desktop and graphics features."

      - name: Build kernel RPM packages
        run: |
          cd linux
          make -j$(nproc) binrpm-pkg

      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fedora-42-kernel-rpms-from-fork
          path: linux/rpmbuild/RPMS/x86_64/
